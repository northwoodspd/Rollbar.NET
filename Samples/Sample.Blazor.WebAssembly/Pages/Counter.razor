@page "/counter"

@using Microsoft.Extensions.Logging
@*inject Microsoft.Extensions.Logging.ILogger<Counter> Logger;*@
@inject ILoggerFactory LoggerFactory
@inject ILoggerProvider LoggerProvider

@using Samples
@using Rollbar


<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

@code {
    private int currentCount = 0;

    private void IncrementCount()
    {
        currentCount++;

        string logMessage = $"Incremented count to: {currentCount}";
        //Logger.LogInformation("From ILogger: " + logMessage);
        Microsoft.Extensions.Logging.ILogger logger = LoggerProvider.CreateLogger("Counter");
        logger.LogInformation(logMessage);

        TestOutRollbarDirectly(currentCount);

        TestOutRollbarViaBlazorUnhandledExceptionLogging();
    }

    private static void TestOutRollbarViaBlazorUnhandledExceptionLogging()
    {
        CallSomeTrouble();
    }

    private static void TestOutRollbarDirectly(int currentCount)
    {

        RollbarLoggerConfig config =
            new RollbarLoggerConfig(
                RollbarSamplesSettings.AccessToken,
                RollbarSamplesSettings.Environment
                );

        using(IRollbar logger = RollbarFactory.CreateNew(config))
        {
            logger.Info("Direct use of Rollbar: Hello from Blazor WASM!!!");

            try
            {
                CallSomeTrouble();
            }
            catch(Exception ex)
            {
                string error = ex.Message;
                var customData = new Dictionary<string, object>();
                customData.Add("RollbarUsage", "Direct use of Rollbar");
                customData.Add("Error", error);
                customData.Add("CurrentCount", currentCount);
                logger.Error(ex, customData);
            }
        }

    }

    private static void CallSomeTrouble()
    {
        MakeTrouble();
    }

    private static void MakeTrouble()
    {
        int divider = 0;
        int result = 20 / divider;
    }

}
